From bd6923cb2bd66bcaf36e6f71db576cf000d37927 Mon Sep 17 00:00:00 2001
From: Ryan Davis <ryan.davis.dev@gmail.com>
Date: Sat, 14 May 2016 15:00:58 +1000
Subject: [PATCH] Add scale component to sprite frame

---
 cocos/2d/CCSprite.cpp           |  4 ++++
 cocos/2d/CCSpriteFrame.cpp      | 17 +++++++++++++++++
 cocos/2d/CCSpriteFrame.h        | 17 +++++++++++++++++
 cocos/2d/CCSpriteFrameCache.cpp |  4 ++++
 4 files changed, 42 insertions(+)

diff --git a/cocos/2d/CCSprite.cpp b/cocos/2d/CCSprite.cpp
index a046b1a..cb81045 100644
--- a/cocos/2d/CCSprite.cpp
+++ b/cocos/2d/CCSprite.cpp
@@ -1078,6 +1078,10 @@ void Sprite::setSpriteFrame(SpriteFrame *spriteFrame)
     {
         setAnchorPoint(spriteFrame->getAnchorPoint());
     }
+    if (spriteFrame->isScaled())
+    {
+        setAnchorPoint(spriteFrame->getScale());
+    }
 }
 
 void Sprite::setDisplayFrameWithAnimationName(const std::string& animationName, ssize_t frameIndex)
diff --git a/cocos/2d/CCSpriteFrame.cpp b/cocos/2d/CCSpriteFrame.cpp
index 9ae9843..6464613 100644
--- a/cocos/2d/CCSpriteFrame.cpp
+++ b/cocos/2d/CCSpriteFrame.cpp
@@ -105,6 +105,7 @@ bool SpriteFrame::initWithTexture(Texture2D* texture, const Rect& rect, bool rot
     _originalSize = CC_SIZE_PIXELS_TO_POINTS( _originalSizeInPixels );
     _rotated = rotated;
     _anchorPoint = Vec2(NAN, NAN);
+    _scale = Vec2(NAN, NAN);
 
     return true;
 }
@@ -121,6 +122,7 @@ bool SpriteFrame::initWithTextureFilename(const std::string& filename, const Rec
     _originalSize = CC_SIZE_PIXELS_TO_POINTS( _originalSizeInPixels );
     _rotated = rotated;
     _anchorPoint = Vec2(NAN, NAN);
+    _scale = Vec2(NAN, NAN);
 
     return true;
 }
@@ -190,6 +192,21 @@ bool SpriteFrame::hasAnchorPoint() const
     return !isnan(_anchorPoint.x);
 }
 
+const Vec2& SpriteFrame::getScale() const
+{
+    return _scale;
+}
+
+void SpriteFrame::setScale(const Vec2& scale)
+{
+    _scale = scale;
+}
+
+bool SpriteFrame::isScaled() const
+{
+    return !isnan(_scale.x);
+}
+
 void SpriteFrame::setTexture(Texture2D * texture)
 {
     if( _texture != texture ) {
diff --git a/cocos/2d/CCSpriteFrame.h b/cocos/2d/CCSpriteFrame.h
index ae443b1..fe959b5 100644
--- a/cocos/2d/CCSpriteFrame.h
+++ b/cocos/2d/CCSpriteFrame.h
@@ -204,6 +204,22 @@ public:
      */
     bool hasAnchorPoint() const;
 
+    /** Get scale of the frame.
+     *
+     * @return The scale of the sprite frame.
+     */
+    const Vec2& getScale() const;
+    /** Set scale of the frame.
+     *
+     * @param scale The scale of the sprite frame.
+     */
+    void setScale(const Vec2& scale);
+    /** Check if the frame is scaled.
+     *
+     * @return true if the frame is scaled.
+     */
+    bool isScaled() const;
+
     // Overrides
 	virtual SpriteFrame *clone() const override;
 
@@ -261,6 +277,7 @@ CC_CONSTRUCTOR_ACCESS:
 protected:
     Vec2 _offset;
     Vec2 _anchorPoint;
+    Vec2 _scale;
     Size _originalSize;
     Rect _rectInPixels;
     bool   _rotated;
diff --git a/cocos/2d/CCSpriteFrameCache.cpp b/cocos/2d/CCSpriteFrameCache.cpp
index 71d8c40..b6b52b0 100644
--- a/cocos/2d/CCSpriteFrameCache.cpp
+++ b/cocos/2d/CCSpriteFrameCache.cpp
@@ -280,6 +280,10 @@ void SpriteFrameCache::addSpriteFramesWithDictionary(ValueMap& dictionary, Textu
             {
                 spriteFrame->setAnchorPoint(PointFromString(frameDict["anchor"].asString()));
             }
+            if (frameDict.find("scale") != frameDict.end())
+            {
+                spriteFrame->setScale(PointFromString(frameDict["scale"].asString()));
+            }
         }
 
         bool flag = NinePatchImageParser::isNinePatchImage(spriteFrameName);
-- 
2.8.2

